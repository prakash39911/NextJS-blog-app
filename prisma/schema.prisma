// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String       @id @default(cuid())
  name            String
  email           String       @unique
  password        String
  emailVerified   DateTime?
  profileComplete Boolean      @default(false)
  createdAt       DateTime     @default(now())
  blogs           Blog[]
  role            Role         @default(MEMBER)
  permissions     permission[]
  profile         Profile?
  ticket          Ticket[]
}

model Profile {
  id     String  @id @default(cuid())
  bio    String?
  image  String?
  userId String  @unique
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Blog {
  id              String   @id @default(cuid())
  userId          String
  title           String
  content         String
  image           String?
  video           String?
  image_public_id String?
  video_public_id String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  published       Boolean  @default(false)
  isApproved      Boolean  @default(false)
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Ticket {
  id          String   @id @default(cuid())
  userId      String
  issue       String
  description String
  resolved    Boolean  @default(false)
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  ADMIN
  MEMBER
}

enum permission {
  CREATE
  EDIT
  DELETE
}
